{
	"info": {
		"_postman_id": "3ffe7e93-0893-4fb6-824b-1e48242333c3",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43658116",
		"_collection_link": "https://krenkomobboss.postman.co/workspace/Krenko-Mob-Boss's-Workspace~3872d916-fd65-4e04-8e4f-4038b7549e5a/collection/43658116-3ffe7e93-0893-4fb6-824b-1e48242333c3?action=share&source=collection_link&creator=43658116"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"value of [0].Id to be 1\", () => {pm.expect(jsonData[0].Id).to.equal(1)});\r",
							"pm.test(\"response to be 200 OK\", () => {pm.response.to.have.status(200)});\r",
							"\r",
							"// Test Product 1\r",
							"pm.test(\"Product 1: ID is 1\", () => {\r",
							"    pm.expect(jsonData[0].Id).to.equal(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Product 1: Name is 'clam chowder'\", () => {\r",
							"    pm.expect(jsonData[0].Name).to.equal(\"clam chowder\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 1: Category is 'clama'\", () => {\r",
							"    pm.expect(jsonData[0].Category).to.equal(\"clama\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 1: Price is 2\", () => {\r",
							"    pm.expect(jsonData[0].Price).to.equal(2);\r",
							"});\r",
							"\r",
							"// Test Product 2\r",
							"pm.test(\"Product 2: ID is 2\", () => {\r",
							"    pm.expect(jsonData[1].Id).to.equal(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Product 2: Name is 'crab hammer for smashing crabs'\", () => {\r",
							"    pm.expect(jsonData[1].Name).to.equal(\"crab hammer for smashing crabs\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 2: Category is 'tools'\", () => {\r",
							"    pm.expect(jsonData[1].Category).to.equal(\"tools\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 2: Price is 65\", () => {\r",
							"    pm.expect(jsonData[1].Price).to.equal(65);\r",
							"});\r",
							"\r",
							"// Test Product 3\r",
							"pm.test(\"Product 3: ID is 3\", () => {\r",
							"    pm.expect(jsonData[2].Id).to.equal(3);\r",
							"});\r",
							"\r",
							"pm.test(\"Product 3: Name is 'clammy the clam: inflatable mascot'\", () => {\r",
							"    pm.expect(jsonData[2].Name).to.equal(\"clammy the clam: inflatable mascot\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 3: Category is 'necessities'\", () => {\r",
							"    pm.expect(jsonData[2].Category).to.equal(\"necessities\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product 3: Price is 999\", () => {\r",
							"    pm.expect(jsonData[2].Price).to.equal(999);\r",
							"});\r",
							"\r",
							"// Additional Test: Ensure response status is 200 OK\r",
							"pm.test(\"Response status is 200 OK\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44329/api/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44329",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44329/api/products/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44329",
					"path": [
						"api",
						"products",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44329/api/products/1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44329",
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "-1"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-AspNet-Version",
							"value": "4.0.30319"
						},
						{
							"key": "X-SourceFiles",
							"value": "=?UTF-8?B?QzpcVXNlcnNcNjY2YmFcc291cmNlXHJlcG9zXFByb2R1Y3RzQXBwXFByb2R1Y3RzQXBwXGFwaVxwcm9kdWN0c1wx?="
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Tue, 15 Apr 2025 23:35:27 GMT"
						},
						{
							"key": "Content-Length",
							"value": "61"
						}
					],
					"cookie": [],
					"body": "{\n    \"Id\": 1,\n    \"Name\": \"clam chowder\",\n    \"Category\": \"clama\",\n    \"Price\": 2\n}"
				}
			]
		}
	]
}